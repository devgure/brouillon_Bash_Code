set -euo pipefail

ROOT="mardi"

###############################################################################
# 1. Create every directory
###############################################################################
mkdir -p "$ROOT"/{\
clients/{\
mobile/src/{components,screens,navigation,services,hooks,utils,assets},\
web-app/{public,src/{pages,components,services,hooks}},\
admin-dashboard/src/{pages,components}\
},\
gateway/src/{routes,middleware},\
services/{\
auth-service/src/{controllers,services},\
profile-service/src,\
chat-service/src/{websocket},\
payment-service/src/{controllers}\
},\
ai-engine/{\
facial-recognition/{src,notebooks},\
matching-engine/src\
},\
prisma,\
docs,\
scripts,\
tests/{unit,integration,mocks},\
infra/{nginx},\
.github/workflows,\
public/swagger-ui\
}

###############################################################################
# 2. Create every empty file
###############################################################################
# clients/mobile
touch "$ROOT"/clients/mobile/src/{\
components/{Card.tsx,AdBanner.tsx,LikeButton.tsx},\
screens/{OnboardingScreen.tsx,MatchScreen.tsx,ChatScreen.tsx,VideoCallScreen.tsx,SubscriptionScreen.tsx},\
navigation/{AppNavigator.tsx,AuthNavigator.tsx},\
services/{api.ts,authService.ts},\
hooks/{useSwipe.ts,useUser.ts},\
utils/geoUtils.ts\
}
touch "$ROOT"/clients/mobile/{app.config.js,App.tsx,babel.config.js,tsconfig.json,package.json}

# clients/web-app
touch "$ROOT"/clients/web-app/src/{pages/{Home.tsx,MatchPage.tsx,AdminLogin.tsx},components/{SwipeCard.tsx,ChatWindow.tsx},services/api.ts,hooks/useSocket.ts,App.tsx}
touch "$ROOT"/clients/web-app/{vite.config.ts,package.json}

# clients/admin-dashboard
touch "$ROOT"/clients/admin-dashboard/src/{pages/{Users.tsx,Reports.tsx,Revenue.tsx,Moderation.tsx},components/DataTable.tsx,App.tsx}
touch "$ROOT"/clients/admin-dashboard/package.json

# gateway
touch "$ROOT"/gateway/{Dockerfile,package.json,server.ts}
touch "$ROOT"/gateway/src/routes/{auth.route.ts,user.route.ts,chat.route.ts}
touch "$ROOT"/gateway/src/middleware/{auth.middleware.ts,rateLimit.middleware.ts}

# services
touch "$ROOT"/services/auth-service/{Dockerfile,package.json,server.ts}
touch "$ROOT"/services/auth-service/src/{controllers/auth.controller.ts,services/auth.service.ts}

touch "$ROOT"/services/profile-service/{Dockerfile,server.ts}

touch "$ROOT"/services/chat-service/{Dockerfile,package.json,server.ts}
touch "$ROOT"/services/chat-service/src/websocket/socketServer.ts

touch "$ROOT"/services/payment-service/{Dockerfile,server.ts}
touch "$ROOT"/services/payment-service/src/{controllers/payment.controller.ts,stripe.webhook.ts}

# ai-engine
touch "$ROOT"/ai-engine/facial-recognition/{requirements.txt,Dockerfile,src/api.py,notebooks/train_face_model.ipynb}
touch "$ROOT"/ai-engine/matching-engine/{Dockerfile,src/server.py}

# prisma
touch "$ROOT"/prisma/{schema.prisma,seed.ts}

# docs
touch "$ROOT"/docs/{openapi.yaml,API.md,DEPLOYMENT.md}

# scripts
touch "$ROOT"/scripts/{seed-dev-data.ts,test-stripe-webhook.ts,setup-ssl.sh}

# tests
touch "$ROOT"/tests/{unit/auth.service.test.ts,integration/match.e2e.ts,mocks/mockData.ts}

# infra
touch "$ROOT"/infra/{docker-compose.yml,docker-compose.prod.yml}
touch "$ROOT"/infra/nginx/{default.conf,Dockerfile}

# CI / misc
touch "$ROOT"/.github/workflows/ci-cd.yml
touch "$ROOT"/public/swagger-ui/.gitkeep
touch "$ROOT"/{.env.example,.gitignore,README.md,package.json}

echo "âœ…  Empty mardi/ skeleton created under ./$ROOT/"
